version: '3.8'

services:
  api-gateway:
    build:
      context: .
      dockerfile: docker/api-gateway.Dockerfile
    ports:
      - "8000:8000"
    environment:
      - LOG_LEVEL=INFO
      - AGENT_ORCHESTRATOR_URL=http://agent-orchestrator:8001
      - DOCUMENT_PROCESSOR_URL=http://document-processor:8002
      - COMPLIANCE_URL=http://compliance-service:8003
      - EVALUATION_URL=http://evaluation-service:8004
      - MONITORING_URL=http://monitoring-service:8005
      - COST_OPTIMIZER_URL=http://cost-optimizer:8006
    networks:
      - rag-network
    depends_on:
      - agent-orchestrator
      - document-processor
      - compliance-service
      - evaluation-service
      - monitoring-service
      - cost-optimizer

  agent-orchestrator:
    build:
      context: .
      dockerfile: docker/agent-orchestrator.Dockerfile
    ports:
      - "8001:8001"
    environment:
      - LOG_LEVEL=INFO
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
      - rag-network
    depends_on:
      - elasticsearch

  document-processor:
    build:
      context: .
      dockerfile: docker/document-processor.Dockerfile
    ports:
      - "8002:8002"
    environment:
      - LOG_LEVEL=INFO
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
      - rag-network
    depends_on:
      - elasticsearch

  compliance-service:
    build:
      context: .
      dockerfile: docker/compliance-service.Dockerfile
    ports:
      - "8003:8003"
    environment:
      - LOG_LEVEL=INFO
    networks:
      - rag-network

  evaluation-service:
    build:
      context: .
      dockerfile: docker/evaluation-service.Dockerfile
    ports:
      - "8004:8004"
    environment:
      - LOG_LEVEL=INFO
    networks:
      - rag-network

  monitoring-service:
    build:
      context: .
      dockerfile: docker/monitoring-service.Dockerfile
    ports:
      - "8005:8005"
    environment:
      - LOG_LEVEL=INFO
    networks:
      - rag-network

  cost-optimizer:
    build:
      context: .
      dockerfile: docker/cost-optimizer.Dockerfile
    ports:
      - "8006:8006"
    environment:
      - LOG_LEVEL=INFO
    networks:
      - rag-network

  elasticsearch:
    image: elasticsearch:8.8.0
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    networks:
      - rag-network
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  web-ui:
    build:
      context: .
      dockerfile: docker/web-ui.Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://api-gateway:8000
    networks:
      - rag-network
    depends_on:
      - api-gateway

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - rag-network

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    networks:
      - rag-network
    depends_on:
      - prometheus

networks:
  rag-network:
    driver: bridge

volumes:
  elasticsearch-data:
